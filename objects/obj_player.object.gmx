<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_idle</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar
Hp, Mp, MaxHp, MaxMp,
Str, Int, Agi, Des, Cri, Esq
AtqFisico, AtqMagico, DefFisica, DefMagica,
Gold;

Str = 10;
Int = 10;
Agi = 10;
Des = 10;

Hp = Str * 10;
Mp = Int * 10;
MaxHp = Hp;
MaxMp = Mp;

AtqFisico = ceil(Str*1.5);
AtqMagico = ceil(Int*3);
DefFisica = ceil(Str*0.75);
DefMagica = ceil(Int*2);

Cri = floor(Des/10);
Esq = floor(Agi/10);

Gold = 0;

// Variaveis de Sietema
z = 0; // Nível de profundidade do objeto

velocity = 4; // Velocidade de locomoção
image_speed = 0.4;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Hp</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>50</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Horizontal Move
if (keyboard_check(vk_right) ||
    keyboard_check(ord('D')) ||
    keyboard_check(ord('d'))) {
    if (!place_meeting(x + velocity, y, obj_collider_16x16)) {
        x += velocity;
        sprite_index = spr_player_run;
        image_xscale = 1;
    }
} else if (keyboard_check(vk_left) ||
    keyboard_check(ord('A')) ||
    keyboard_check(ord('a'))) {
    if (!place_meeting(x + velocity, y, obj_collider_16x16)) {
        x -= velocity;
        sprite_index = spr_player_run;
        image_xscale = -1;
    }
}

// Vertical move
if (keyboard_check(vk_up) ||
    keyboard_check(ord('W')) ||
    keyboard_check(ord('w'))) {
    if (!place_meeting(x, y - velocity, obj_collider_16x16)) {
        y -= velocity;
    }
} else if (keyboard_check(vk_down) ||
    keyboard_check(ord('S')) ||
    keyboard_check(ord('s'))) {
    if (!place_meeting(x, y + velocity, obj_collider_16x16)) {
        y += velocity;
    }
}

// If idle
if (keyboard_check(vk_nokey)) {
    sprite_index = spr_player_run;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Exibição do Hp
draw_set_colour(c_white); // Cor da borda
draw_rectangle(x - (sprite_width), y - 8, x + (sprite_width), y - 2, true);
// Fundo do Hp
draw_set_colour(c_gray);
draw_rectangle(x - ((sprite_width) - 1), y - 8, x + ((sprite_width) - 1), y - 2, false);
// Hp Atual
draw_set_colour(c_green);
draw_rectangle(x - ((sprite_width) - 1), y - 8, x + ((Hp/MaxHp) * ((sprite_width) - 1)), y - 2, false);

// Desenha-se
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
