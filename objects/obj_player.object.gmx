<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_stand</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar
level, Name,
Hp, Mp, MaxHp, MaxMp,
Str, Int, Agi, Des, Cri, Esq
AtqFisico, AtqMagico, DefFisica, DefMagica,
Gold;

level = 01;
Name = "Toba";

Str = 10;
Int = 10;
Agi = 10;
Des = 10;

Hp = Str * 10;
Mp = Int * 10;
MaxHp = Hp;
MaxMp = Mp;

AtqFisico = ceil(Str*1.5);
AtqMagico = ceil(Int*3);
DefFisica = ceil(Str*0.75);
DefMagica = ceil(Int*2);

Cri = floor(Des/10);
Esq = floor(Agi/10);

Gold = 0;

// Variaveis de Sietema
z = 0; // Nível de profundidade do objeto

velocity = 4; // Velocidade de locomoção
image_speed = 0.4;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>init_gridMove(32, 4, spr_player_up, spr_player_down, spr_player_right, spr_player_left, spr_player_stand);

/***************************************************
  Skills
 ***************************************************/

magic_level  = 01;
carry_weight = 25;

// Magics
Magics[magic_level, 0] = obj_fire_lv1;
Magics[magic_level, 1] = obj_ice_lv1;

// Inventary
var inventorySize = sqrt(carry_weight);
for (var xx = 0; xx &lt; inventorySize; xx++) {
    for (var yy = 0; yy &lt; inventorySize; yy ++)
    {
        Inventory[xx, yy] = noone;
    };    
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (current_world_state = MACHINE_WORLD.EXPLORATION) {
    scr_gridMove();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (current_world_state == MACHINE_WORLD.EXPLORATION) {
    // Exibição do Hp
    draw_set_colour(c_white); // Cor da borda
    draw_rectangle(x - (sprite_width), y - 8, x + (sprite_width), y - 2, true);
    // Fundo do Hp
    draw_set_colour(c_gray);
    draw_rectangle(x - ((sprite_width) - 1), y - 8, x + ((sprite_width) - 1), y - 2, false);
    // Hp Atual
    draw_set_colour(c_green);
    draw_rectangle(x - ((sprite_width) - 1), y - 8, x + ((Hp/MaxHp) * ((sprite_width) - 1)), y - 2, false);
}

// Desenha-se
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
